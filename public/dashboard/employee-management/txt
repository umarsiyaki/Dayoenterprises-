Certainly! Let's now continue writing the remaining components to ensure we have a complete **Employee Management System** for your inventory e-commerce website. These components will be **interactive, professional, and advanced** to meet business standards.
Absolutely! Below is a modern, **advanced, and professional CSS style** for your **Employee Management System**. This CSS code covers global styles, responsive layouts, and component-specific styling. It’s designed to provide a clean, modern, and user-friendly experience.

### **Global Styles (styles.css)**

```css
/* Reset some default browser styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Roboto', sans-serif;
    background-color: #f4f7fc;
    color: #333;
    padding: 20px;
}

/* Button Styles */
.btn-primary {
    background-color: #007bff;
    color: white;
    padding: 12px 24px;
    border: none;
    border-radius: 8px;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.btn-primary:hover {
    background-color: #0056b3;
}

/* Form and Input Styles */
input[type="text"],
input[type="number"],
input[type="date"],
textarea,
select {
    width: 100%;
    padding: 10px;
    margin: 10px 0;
    border: 1px solid #ccc;
    border-radius: 8px;
    font-size: 14px;
}

textarea {
    height: 100px;
    resize: vertical;
}

label {
    font-weight: bold;
    margin-bottom: 5px;
}

/* Card Layout */
.card {
    background: white;
    padding: 20px;
    border-radius: 12px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    margin-bottom: 20px;
    transition: transform 0.3s ease-in-out;
}

.card:hover {
    transform: translateY(-5px);
}

h2 {
    font-size: 24px;
    color: #333;
    margin-bottom: 20px;
}

/* Table Styles */
table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
}

th,
td {
    text-align: left;
    padding: 12px;
    border-bottom: 1px solid #e0e0e0;
}

th {
    background-color: #f0f0f0;
    color: #007bff;
}

tbody tr:hover {
    background-color: #f1f1f1;
}

/* Form Container */
form {
    display: flex;
    flex-direction: column;
}

.form-group {
    margin-bottom: 15px;
}

.form-group input,
.form-group select,
.form-group textarea {
    width: 100%;
}

/* Responsive Layout */
@media (max-width: 768px) {
    .card {
        padding: 15px;
    }

    h2 {
        font-size: 20px;
    }

    table {
        font-size: 14px;
    }

    .btn-primary {
        width: 100%;
    }
}

@media (max-width: 480px) {
    body {
        padding: 15px;
    }

    table {
        font-size: 12px;
    }

    .card {
        padding: 10px;
    }

    .btn-primary {
        font-size: 14px;
    }
}
```

### **Explanation of CSS Code:**

1. **Global Styles:**
   - Resets padding and margin using `*` selector for consistency across browsers.
   - The **body** uses a modern font-family (`Roboto`), sets a light background color (`#f4f7fc`), and applies a clean and minimalistic color scheme.
   
2. **Buttons:**
   - `.btn-primary` class defines a sleek button design with rounded corners, padding, and smooth hover transitions.
   
3. **Forms and Inputs:**
   - Text inputs, number inputs, selects, and textareas have consistent padding, margin, and border-radius for a clean look.
   - Textareas are given a larger height and made resizable vertically to improve UX.
   
4. **Cards:**
   - Cards are styled with a white background, shadow effects for depth, and rounded corners for a modern touch. The hover effect gives a slight lift to indicate interactivity.

5. **Tables:**
   - Tables are styled to have a clean, readable layout, with alternating row highlights (`tr:hover`) for better data presentation. The headers have a distinct background color for emphasis.

6. **Forms and Layout:**
   - Forms have a **flexbox** layout for alignment. Input fields and dropdowns are full-width with appropriate spacing between form elements.
   
7. **Responsive Design:**
   - Media queries ensure that the layout adapts to smaller screen sizes (tablets and mobile devices). For example, cards and buttons adjust padding, font sizes are reduced, and the table font size is made smaller for mobile screens.
   
### **Component-Specific Styling:**

Now, let’s dive into how we style specific components:

#### **1. attendanceTracking.html**

```css
#attendanceTable {
    width: 100%;
    margin-top: 20px;
    border-collapse: collapse;
}

#attendanceTable th,
#attendanceTable td {
    text-align: center;
    font-size: 14px;
}

#attendanceTable th {
    background-color: #007bff;
    color: white;
}

#attendanceTable tbody tr:nth-child(even) {
    background-color: #f9f9f9;
}

#markAttendanceBtn {
    margin-top: 20px;
    width: 100%;
}
```

#### **2. payrollProcessing.html**

```css
#payrollTable {
    margin-top: 20px;
    border-collapse: collapse;
}

#payrollTable th,
#payrollTable td {
    text-align: center;
    padding: 15px;
}

#payrollTable th {
    background-color: #4CAF50;
    color: white;
}

#payrollTable tbody tr:nth-child(even) {
    background-color: #f9f9f9;
}

#processPayrollBtn {
    margin-top: 20px;
    width: 100%;
}
```

#### **3. performanceEvaluation.html**

```css
#performanceForm .form-group {
    margin-bottom: 20px;
}

#performanceForm select,
#performanceForm textarea {
    margin-top: 5px;
}

#performanceForm button {
    margin-top: 20px;
    width: 100%;
}
```

#### **4. trainingDevelopment.html**

```css
#trainingForm .form-group {
    margin-bottom: 20px;
}

#trainingForm button {
    margin-top: 20px;
    width: 100%;
}
```

#### **5. benefitsCompensation.html**

```css
#benefitsForm .form-group {
    margin-bottom: 20px;
}

#benefitsForm button {
    margin-top: 20px;
    width: 100%;
}
```

#### **6. leaveManagement.html**

```css
#leaveTable {
    margin-top: 20px;
    border-collapse: collapse;
}

#leaveTable th,
#leaveTable td {
    text-align: center;
    padding: 15px;
}

#leaveTable th {
    background-color: #ff9800;
    color: white;
}

#leaveTable tbody tr:nth-child(even) {
    background-color: #f9f9f9;
}

#applyLeaveBtn {
    margin-top: 20px;
    width: 100%;
}
```

#### **7. promotionDemotion.html**

```css
#promotionForm .form-group {
    margin-bottom: 20px;
}

#promotionForm button {
    margin-top: 20px;
    width: 100%;
}
```

#### **8. employeeExit.html**

```css
#terminationForm .form-group {
    margin-bottom: 20px;
}

#terminationForm button {
    margin-top: 20px;
    width: 100%;
}
```

#### **9. reportingAnalytics.html**

```css
#analyticsCharts {
    margin-top: 20px;
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
}

#generateReportBtn {
    margin-top: 20px;
    width: 100%;
}
```

### **Conclusion**

This **advanced CSS** gives your employee management system a **modern and professional look**, ensuring an intuitive and smooth experience for users. The **responsive design** ensures accessibility on both mobile and desktop, while interactive components like **buttons, forms, and tables** are styled to make your web application highly functional and visually appealing.

If you need additional enhancements or specific adjustments, feel free to ask!

### 1. **attendanceTracking.html** – Attendance Tracking Component

```html
<div class="card">
    <h2>Attendance Tracking</h2>
    <table id="attendanceTable">
        <thead>
            <tr>
                <th>Employee Name</th>
                <th>Check-In</th>
                <th>Check-Out</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <!-- Dynamic attendance data will be injected here -->
        </tbody>
    </table>
    <button id="markAttendanceBtn" class="btn-primary">Mark Attendance</button>
</div>
```

### Key Features in Attendance:
- **Attendance Table** – Displays employee names with check-in/out status.
- **Actions Column** – Provides the option to mark or edit attendance records.
- **Mark Attendance Button** – Opens the form for marking attendance for the day.

---

### 2. **payrollProcessing.html** – Payroll Management Component

```html
<div class="card">
    <h2>Payroll Processing</h2>
    <table id="payrollTable">
        <thead>
            <tr>
                <th>Employee Name</th>
                <th>Salary</th>
                <th>Bonus</th>
                <th>Deductions</th>
                <th>Total Pay</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <!-- Payroll data will be dynamically injected -->
        </tbody>
    </table>
    <button id="processPayrollBtn" class="btn-primary">Process Payroll</button>
</div>
```

### Key Features in Payroll:
- **Payroll Table** – Shows employee name, salary, bonus, deductions, and total pay.
- **Process Payroll Button** – Trigger payroll processing for the selected employee.

---

### 3. **performanceEvaluation.html** – Performance Evaluation Component

```html
<div class="card">
    <h2>Performance Evaluation</h2>
    <form id="performanceForm">
        <div class="form-group">
            <label for="employeeName">Employee Name:</label>
            <input type="text" id="employeeName" name="employeeName" placeholder="Enter employee name">
        </div>
        <div class="form-group">
            <label for="performanceRating">Performance Rating:</label>
            <select id="performanceRating" name="performanceRating">
                <option value="Excellent">Excellent</option>
                <option value="Good">Good</option>
                <option value="Average">Average</option>
                <option value="Needs Improvement">Needs Improvement</option>
            </select>
        </div>
        <div class="form-group">
            <label for="comments">Comments:</label>
            <textarea id="comments" name="comments" placeholder="Enter performance comments"></textarea>
        </div>
        <button type="submit" class="btn-primary">Save Evaluation</button>
    </form>
</div>
```

### Key Features in Performance Evaluation:
- **Performance Rating** – Dropdown for rating performance (Excellent, Good, etc.).
- **Comments Section** – Textarea for feedback.
- **Save Button** – Saves the performance evaluation.

---

### 4. **trainingDevelopment.html** – Training and Development Component

```html
<div class="card">
    <h2>Training & Development</h2>
    <form id="trainingForm">
        <div class="form-group">
            <label for="employeeName">Employee Name:</label>
            <input type="text" id="employeeName" name="employeeName" placeholder="Enter employee name">
        </div>
        <div class="form-group">
            <label for="trainingCourse">Training Course:</label>
            <input type="text" id="trainingCourse" name="trainingCourse" placeholder="Enter course name">
        </div>
        <div class="form-group">
            <label for="trainingDate">Training Date:</label>
            <input type="date" id="trainingDate" name="trainingDate">
        </div>
        <button type="submit" class="btn-primary">Assign Training</button>
    </form>
</div>
```

### Key Features in Training:
- **Training Course** – Allows the admin to assign training courses to employees.
- **Training Date** – Input for setting the training schedule.
- **Assign Button** – Button to assign the selected training to the employee.

---

### 5. **benefitsCompensation.html** – Benefits and Compensation Component

```html
<div class="card">
    <h2>Benefits & Compensation</h2>
    <form id="benefitsForm">
        <div class="form-group">
            <label for="employeeName">Employee Name:</label>
            <input type="text" id="employeeName" name="employeeName" placeholder="Enter employee name">
        </div>
        <div class="form-group">
            <label for="benefitType">Benefit Type:</label>
            <select id="benefitType" name="benefitType">
                <option value="Health Insurance">Health Insurance</option>
                <option value="Retirement Plan">Retirement Plan</option>
                <option value="Paid Time Off">Paid Time Off</option>
            </select>
        </div>
        <div class="form-group">
            <label for="amount">Amount:</label>
            <input type="number" id="amount" name="amount" placeholder="Enter benefit amount">
        </div>
        <button type="submit" class="btn-primary">Assign Benefit</button>
    </form>
</div>
```

### Key Features in Benefits:
- **Benefit Type** – Allows selection of benefits like health insurance, retirement, and PTO.
- **Amount** – Input for entering benefit amount.
- **Assign Button** – Button to assign the selected benefit.

---

### 6. **leaveManagement.html** – Leave Management Component

```html
<div class="card">
    <h2>Leave Management</h2>
    <table id="leaveTable">
        <thead>
            <tr>
                <th>Employee Name</th>
                <th>Leave Type</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            <!-- Leave data will be injected dynamically -->
        </tbody>
    </table>
    <button id="applyLeaveBtn" class="btn-primary">Apply for Leave</button>
</div>
```

### Key Features in Leave Management:
- **Leave Table** – Displays employee leave information (type, start date, end date).
- **Apply for Leave** – Button that lets employees apply for leave.

---

### 7. **promotionDemotion.html** – Promotion and Demotion Component

```html
```

### Key Features in Promotion:
- **New Role** – Dropdown for selecting the employee's new role.
- **Reason for Promotion** – Textarea to provide a reason.
- **Submit Button** – To submit the promotion details.

---

### 8. **employeeExit.html** – Employee Exit (Termination) Component

```html

```

### Key Features in Employee Exit:
- **Exit Date** – Input for setting the employee's exit date.
- **Exit Reason** – Textarea to describe why the employee is leaving.
- **Submit Button** – Submit the employee's exit/termination details.

---

### 9. **reportingAnalytics.html**

 – Reporting and Analytics Component

```html

```

### Key Features in Reporting:
- **Analytics Section** – Displays reports, charts, or graphs for data analysis.
- **Generate Report Button** – Triggers generation of employee-related reports.

---

### Conclusion

Now you have all the core components for the **Employee Management System**. These components, with their **modern design**, **dynamic functionality**, and **advanced UX** features, will elevate the user experience and create a professional platform. Next steps would include integrating backend functionality for CRUD operations and connecting it to a database.

Let me know if you need help with integrating these components or writing the backend!